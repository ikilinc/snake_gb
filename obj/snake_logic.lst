                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module snake_logic
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _clock
                                     12 	.globl _set_sprite_data
                                     13 	.globl _get_bkg_tile_xy
                                     14 	.globl _timeCounter
                                     15 	.globl _lastTime
                                     16 	.globl _turnaraoundMap
                                     17 	.globl _snake
                                     18 	.globl _init_snake
                                     19 	.globl _reset_snake_head_props
                                     20 	.globl _enlarge_snake
                                     21 	.globl _get_bg_tile_index_front_of_snake
                                     22 	.globl _check_collision_with_wall
                                     23 	.globl _is_snake_moving_up
                                     24 	.globl _is_snake_moving_left
                                     25 	.globl _move_right
                                     26 	.globl _move_left
                                     27 	.globl _move_up
                                     28 	.globl _move_down
                                     29 	.globl _move_snake
                                     30 ;--------------------------------------------------------
                                     31 ; special function registers
                                     32 ;--------------------------------------------------------
                                     33 ;--------------------------------------------------------
                                     34 ; ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area _DATA
                           000000    37 G$snake$0_0$0==.
      000000                         38 _snake::
      000000                         39 	.ds 89
                           000059    40 G$turnaraoundMap$0_0$0==.
      000059                         41 _turnaraoundMap::
      000059                         42 	.ds 625
                                     43 ;--------------------------------------------------------
                                     44 ; ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area _INITIALIZED
                           000000    47 G$lastTime$0_0$0==.
      000000                         48 _lastTime::
      000000                         49 	.ds 2
                           000002    50 G$timeCounter$0_0$0==.
      000002                         51 _timeCounter::
      000002                         52 	.ds 2
                                     53 ;--------------------------------------------------------
                                     54 ; absolute external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area _DABS (ABS)
                                     57 ;--------------------------------------------------------
                                     58 ; global & static initialisations
                                     59 ;--------------------------------------------------------
                                     60 	.area _HOME
                                     61 	.area _GSINIT
                                     62 	.area _GSFINAL
                                     63 	.area _GSINIT
                                     64 ;--------------------------------------------------------
                                     65 ; Home
                                     66 ;--------------------------------------------------------
                                     67 	.area _HOME
                                     68 	.area _HOME
                                     69 ;--------------------------------------------------------
                                     70 ; code
                                     71 ;--------------------------------------------------------
                                     72 	.area _CODE
                           000000    73 	G$init_snake$0$0	= .
                                     74 	.globl	G$init_snake$0$0
                           000000    75 	C$snake_logic.c$7$0_0$90	= .
                                     76 	.globl	C$snake_logic.c$7$0_0$90
                                     77 ;src/snake_logic.c:7: void init_snake()
                                     78 ;	---------------------------------
                                     79 ; Function init_snake
                                     80 ; ---------------------------------
      000000                         81 _init_snake::
                           000000    82 	C$snake_logic.c$9$1_0$90	= .
                                     83 	.globl	C$snake_logic.c$9$1_0$90
                                     84 ;src/snake_logic.c:9: snake.currentSpeed = 0;
      000000 21r58r00                85 	ld	hl, #(_snake + 88)
      000003 36 00                   86 	ld	(hl), #0x00
                           000005    87 	C$snake_logic.c$10$1_0$90	= .
                                     88 	.globl	C$snake_logic.c$10$1_0$90
                                     89 ;src/snake_logic.c:10: snake.x = (9 * 8) + OFF_SCREEN_OFFSET_X;
      000005 21r00r00                90 	ld	hl, #_snake
      000008 36 50                   91 	ld	(hl), #0x50
                           00000A    92 	C$snake_logic.c$11$1_0$90	= .
                                     93 	.globl	C$snake_logic.c$11$1_0$90
                                     94 ;src/snake_logic.c:11: snake.y = ((DISPLAY_MAX_TILE_Y * 8) / 2) + OFF_SCREEN_OFFSET_Y;
      00000A 21r01r00                95 	ld	hl, #(_snake + 1)
      00000D 36 58                   96 	ld	(hl), #0x58
                           00000F    97 	C$snake_logic.c$12$1_0$90	= .
                                     98 	.globl	C$snake_logic.c$12$1_0$90
                                     99 ;src/snake_logic.c:12: snake.lastUsedTailIndex = 1u;
      00000F 21r54r00               100 	ld	hl, #(_snake + 84)
      000012 36 01                  101 	ld	(hl), #0x01
                           000014   102 	C$snake_logic.c$13$1_0$90	= .
                                    103 	.globl	C$snake_logic.c$13$1_0$90
                                    104 ;src/snake_logic.c:13: snake.direction[0] = -1 * SNAKE_MOVEMENT_STEP;
      000014 21r02r00               105 	ld	hl, #(_snake + 2)
      000017 36 F8                  106 	ld	(hl), #0xf8
                           000019   107 	C$snake_logic.c$14$1_0$90	= .
                                    108 	.globl	C$snake_logic.c$14$1_0$90
                                    109 ;src/snake_logic.c:14: snake.direction[1] = 0 * SNAKE_MOVEMENT_STEP;
      000019 21r03r00               110 	ld	hl, #(_snake + 3)
                           00001C   111 	C$snake_logic.c$15$3_0$92	= .
                                    112 	.globl	C$snake_logic.c$15$3_0$92
                                    113 ;src/snake_logic.c:15: for (int i = 0; i <= snake.tailLength; i++)
      00001C 01 00 00               114 	ld	bc, #0x0000
      00001F 71                     115 	ld	(hl), c
      000020                        116 00105$:
      000020 FAr55r00               117 	ld	a, (#(_snake + 85) + 0)
      000023 6F                     118 	ld	l, a
                                    119 ;	spillPairReg hl
                                    120 ;	spillPairReg hl
      000024 26 00                  121 	ld	h, #0x00
                                    122 ;	spillPairReg hl
                                    123 ;	spillPairReg hl
      000026 58                     124 	ld	e, b
      000027 54                     125 	ld	d, h
      000028 7D                     126 	ld	a, l
      000029 91                     127 	sub	a, c
      00002A 7C                     128 	ld	a, h
      00002B 98                     129 	sbc	a, b
      00002C CB 7B                  130 	bit	7, e
      00002E 28 07                  131 	jr	Z, 00120$
      000030 CB 7A                  132 	bit	7, d
      000032 20 08                  133 	jr	NZ, 00121$
      000034 BF                     134 	cp	a, a
      000035 18 05                  135 	jr	00121$
      000037                        136 00120$:
      000037 CB 7A                  137 	bit	7, d
      000039 28 01                  138 	jr	Z, 00121$
      00003B 37                     139 	scf
      00003C                        140 00121$:
      00003C 38 1E                  141 	jr	C, 00101$
                                    142 ;src/snake_logic.c:17: hide_sprite(i + 6u);
      00003E 79                     143 	ld	a, c
      00003F C6 06                  144 	add	a, #0x06
      000041 5F                     145 	ld	e, a
                                    146 ;/opt/gbdk/include/gb/gb.h:1413: shadow_OAM[nb].y = 0;
      000042 26 00                  147 	ld	h, #0x00
                                    148 ;	spillPairReg hl
                                    149 ;	spillPairReg hl
      000044 6B                     150 	ld	l, e
      000045 29                     151 	add	hl, hl
      000046 29                     152 	add	hl, hl
      000047 11r00r00               153 	ld	de, #_shadow_OAM
      00004A 19                     154 	add	hl, de
      00004B 36 00                  155 	ld	(hl), #0x00
                           00004D   156 	C$snake_logic.c$18$3_0$92	= .
                                    157 	.globl	C$snake_logic.c$18$3_0$92
                                    158 ;src/snake_logic.c:18: snake.tail[i].x = 99;
      00004D 69                     159 	ld	l, c
      00004E 60                     160 	ld	h, b
      00004F 29                     161 	add	hl, hl
      000050 11r04r00               162 	ld	de, #(_snake + 4)
      000053 19                     163 	add	hl, de
                           000054   164 	C$snake_logic.c$19$3_0$92	= .
                                    165 	.globl	C$snake_logic.c$19$3_0$92
                                    166 ;src/snake_logic.c:19: snake.tail[i].y = 99;
      000054 3E 63                  167 	ld	a, #0x63
      000056 22                     168 	ld	(hl+), a
      000057 36 63                  169 	ld	(hl), #0x63
                           000059   170 	C$snake_logic.c$15$2_0$91	= .
                                    171 	.globl	C$snake_logic.c$15$2_0$91
                                    172 ;src/snake_logic.c:15: for (int i = 0; i <= snake.tailLength; i++)
      000059 03                     173 	inc	bc
      00005A 18 C4                  174 	jr	00105$
      00005C                        175 00101$:
                           00005C   176 	C$snake_logic.c$21$1_0$90	= .
                                    177 	.globl	C$snake_logic.c$21$1_0$90
                                    178 ;src/snake_logic.c:21: snake.tailLength = 0;
      00005C 21r55r00               179 	ld	hl, #(_snake + 85)
      00005F 36 00                  180 	ld	(hl), #0x00
                           000061   181 	C$snake_logic.c$22$1_0$90	= .
                                    182 	.globl	C$snake_logic.c$22$1_0$90
                                    183 ;src/snake_logic.c:22: snake.snakeHeadspriteProp = 0;
      000061 21r56r00               184 	ld	hl, #(_snake + 86)
      000064 36 00                  185 	ld	(hl), #0x00
                           000066   186 	C$snake_logic.c$23$1_0$90	= .
                                    187 	.globl	C$snake_logic.c$23$1_0$90
                                    188 ;src/snake_logic.c:23: snake.snakeHeadSpriteIndex = 1u;
      000066 21r57r00               189 	ld	hl, #(_snake + 87)
      000069 36 01                  190 	ld	(hl), #0x01
                                    191 ;/opt/gbdk/include/gb/gb.h:1314: shadow_OAM[nb].tile=tile;
      00006B 21r02r00               192 	ld	hl, #(_shadow_OAM + 2)
      00006E 36 01                  193 	ld	(hl), #0x01
                           000070   194 	C$snake_logic.c$25$3_0$90	= .
                                    195 	.globl	C$snake_logic.c$25$3_0$90
                                    196 ;src/snake_logic.c:25: set_sprite_tile(SNAKE_HEAD_VRAM_SPRITE_INDEX, 1u); // 1 => position of snake sprite on vram
                           000070   197 	C$snake_logic.c$26$3_0$90	= .
                                    198 	.globl	C$snake_logic.c$26$3_0$90
                                    199 ;src/snake_logic.c:26: }
                           000070   200 	C$snake_logic.c$26$3_0$90	= .
                                    201 	.globl	C$snake_logic.c$26$3_0$90
                           000070   202 	XG$init_snake$0$0	= .
                                    203 	.globl	XG$init_snake$0$0
      000070 C9                     204 	ret
                           000071   205 Fsnake_logic$speed$0_0$0 == .
      000071                        206 _speed:
      000071 0A 00                  207 	.dw #0x000a
      000073 09 00                  208 	.dw #0x0009
      000075 08 00                  209 	.dw #0x0008
      000077 06 00                  210 	.dw #0x0006
      000079 04 00                  211 	.dw #0x0004
      00007B 02 00                  212 	.dw #0x0002
      00007D 01 00                  213 	.dw #0x0001
                           00007F   214 	G$reset_snake_head_props$0$0	= .
                                    215 	.globl	G$reset_snake_head_props$0$0
                           00007F   216 	C$snake_logic.c$28$3_0$99	= .
                                    217 	.globl	C$snake_logic.c$28$3_0$99
                                    218 ;src/snake_logic.c:28: void reset_snake_head_props()
                                    219 ;	---------------------------------
                                    220 ; Function reset_snake_head_props
                                    221 ; ---------------------------------
      00007F                        222 _reset_snake_head_props::
                           00007F   223 	C$snake_logic.c$30$1_0$99	= .
                                    224 	.globl	C$snake_logic.c$30$1_0$99
                                    225 ;src/snake_logic.c:30: snake.snakeHeadspriteProp = 0;
      00007F 21r56r00               226 	ld	hl, #(_snake + 86)
      000082 36 00                  227 	ld	(hl), #0x00
                           000084   228 	C$snake_logic.c$31$1_0$99	= .
                                    229 	.globl	C$snake_logic.c$31$1_0$99
                                    230 ;src/snake_logic.c:31: snake.snakeHeadSpriteIndex = 1u;
      000084 21r57r00               231 	ld	hl, #(_snake + 87)
      000087 36 01                  232 	ld	(hl), #0x01
                           000089   233 	C$snake_logic.c$32$1_0$99	= .
                                    234 	.globl	C$snake_logic.c$32$1_0$99
                                    235 ;src/snake_logic.c:32: }
                           000089   236 	C$snake_logic.c$32$1_0$99	= .
                                    237 	.globl	C$snake_logic.c$32$1_0$99
                           000089   238 	XG$reset_snake_head_props$0$0	= .
                                    239 	.globl	XG$reset_snake_head_props$0$0
      000089 C9                     240 	ret
                           00008A   241 	G$enlarge_snake$0$0	= .
                                    242 	.globl	G$enlarge_snake$0$0
                           00008A   243 	C$snake_logic.c$34$1_0$100	= .
                                    244 	.globl	C$snake_logic.c$34$1_0$100
                                    245 ;src/snake_logic.c:34: void enlarge_snake()
                                    246 ;	---------------------------------
                                    247 ; Function enlarge_snake
                                    248 ; ---------------------------------
      00008A                        249 _enlarge_snake::
      00008A 3B                     250 	dec	sp
      00008B 3B                     251 	dec	sp
                           00008C   252 	C$snake_logic.c$37$1_0$100	= .
                                    253 	.globl	C$snake_logic.c$37$1_0$100
                                    254 ;src/snake_logic.c:37: if (snake.tailLength == 30)
      00008C FAr55r00               255 	ld	a, (#(_snake + 85) + 0)
      00008F FE 1E                  256 	cp	a, #0x1e
      000091 28 53                  257 	jr	Z, 00104$
                           000093   258 	C$snake_logic.c$39$2_0$101	= .
                                    259 	.globl	C$snake_logic.c$39$2_0$101
                                    260 ;src/snake_logic.c:39: return;
      000093 18 00                  261 	jr	00102$
      000095                        262 00102$:
                           000095   263 	C$snake_logic.c$42$1_0$100	= .
                                    264 	.globl	C$snake_logic.c$42$1_0$100
                                    265 ;src/snake_logic.c:42: snake.tailLength++;
      000095 4F                     266 	ld	c, a
      000096 0C                     267 	inc	c
      000097 21r55r00               268 	ld	hl, #(_snake + 85)
      00009A 71                     269 	ld	(hl), c
                           00009B   270 	C$snake_logic.c$44$1_0$100	= .
                                    271 	.globl	C$snake_logic.c$44$1_0$100
                                    272 ;src/snake_logic.c:44: set_sprite_data(snake.tailLength + 6u, snake.lastUsedTailIndex, SimpleSnakeTiles);
      00009B 21r54r00               273 	ld	hl, #(_snake + 84)
      00009E 46                     274 	ld	b, (hl)
      00009F 79                     275 	ld	a, c
      0000A0 C6 06                  276 	add	a, #0x06
      0000A2 11r00r00               277 	ld	de, #_SimpleSnakeTiles
      0000A5 D5                     278 	push	de
      0000A6 C5                     279 	push	bc
      0000A7 33                     280 	inc	sp
      0000A8 F5                     281 	push	af
      0000A9 33                     282 	inc	sp
      0000AA CDr00r00               283 	call	_set_sprite_data
      0000AD E8 04                  284 	add	sp, #4
                                    285 ;src/snake_logic.c:45: set_sprite_tile(snake.tailLength + 6u, snake.lastUsedTailIndex);
      0000AF 21r54r00               286 	ld	hl, #(_snake + 84)
      0000B2 4E                     287 	ld	c, (hl)
      0000B3 FAr55r00               288 	ld	a, (#(_snake + 85) + 0)
      0000B6 C6 06                  289 	add	a, #0x06
                                    290 ;/opt/gbdk/include/gb/gb.h:1314: shadow_OAM[nb].tile=tile;
      0000B8 6F                     291 	ld	l, a
      0000B9 11r00r00               292 	ld	de, #_shadow_OAM+0
                                    293 ;	spillPairReg hl
                                    294 ;	spillPairReg hl
      0000BC 26 00                  295 	ld	h, #0x00
                                    296 ;	spillPairReg hl
                                    297 ;	spillPairReg hl
      0000BE 29                     298 	add	hl, hl
      0000BF 29                     299 	add	hl, hl
      0000C0 19                     300 	add	hl, de
      0000C1 23                     301 	inc	hl
      0000C2 23                     302 	inc	hl
      0000C3 5D                     303 	ld	e, l
      0000C4 54                     304 	ld	d, h
      0000C5 79                     305 	ld	a, c
      0000C6 12                     306 	ld	(de), a
                           0000C7   307 	C$snake_logic.c$48$1_1$102	= .
                                    308 	.globl	C$snake_logic.c$48$1_1$102
                                    309 ;src/snake_logic.c:48: point.x = 99;
                           0000C7   310 	C$snake_logic.c$49$1_1$102	= .
                                    311 	.globl	C$snake_logic.c$49$1_1$102
                                    312 ;src/snake_logic.c:49: point.y = 99;
      0000C7 F8 00                  313 	ldhl	sp,#0
      0000C9 36 63                  314 	ld	(hl), #0x63
                                    315 ;	spillPairReg hl
                                    316 ;	spillPairReg hl
      0000CB 4D                     317 	ld	c,l
      0000CC 44                     318 	ld	b,h
                                    319 ;	spillPairReg hl
                                    320 ;	spillPairReg hl
      0000CD 23                     321 	inc	hl
      0000CE 36 63                  322 	ld	(hl), #0x63
                           0000D0   323 	C$snake_logic.c$50$1_1$102	= .
                                    324 	.globl	C$snake_logic.c$50$1_1$102
                                    325 ;src/snake_logic.c:50: snake.tail[snake.tailLength] = point;
      0000D0 FAr55r00               326 	ld	a, (#(_snake + 85) + 0)
      0000D3 87                     327 	add	a, a
      0000D4 5F                     328 	ld	e, a
      0000D5 21r04r00               329 	ld	hl, #(_snake + 4)
      0000D8 16 00                  330 	ld	d, #0x00
      0000DA 19                     331 	add	hl, de
      0000DB 11 02 00               332 	ld	de, #0x0002
      0000DE D5                     333 	push	de
      0000DF C5                     334 	push	bc
      0000E0 E5                     335 	push	hl
      0000E1 CDr00r00               336 	call	___memcpy
      0000E4 E8 06                  337 	add	sp, #6
      0000E6                        338 00104$:
                           0000E6   339 	C$snake_logic.c$51$1_1$100	= .
                                    340 	.globl	C$snake_logic.c$51$1_1$100
                                    341 ;src/snake_logic.c:51: }
      0000E6 33                     342 	inc	sp
      0000E7 33                     343 	inc	sp
                           0000E8   344 	C$snake_logic.c$51$1_1$100	= .
                                    345 	.globl	C$snake_logic.c$51$1_1$100
                           0000E8   346 	XG$enlarge_snake$0$0	= .
                                    347 	.globl	XG$enlarge_snake$0$0
      0000E8 C9                     348 	ret
                           0000E9   349 	G$get_bg_tile_index_front_of_snake$0$0	= .
                                    350 	.globl	G$get_bg_tile_index_front_of_snake$0$0
                           0000E9   351 	C$snake_logic.c$53$1_1$106	= .
                                    352 	.globl	C$snake_logic.c$53$1_1$106
                                    353 ;src/snake_logic.c:53: uint8_t get_bg_tile_index_front_of_snake()
                                    354 ;	---------------------------------
                                    355 ; Function get_bg_tile_index_front_of_snake
                                    356 ; ---------------------------------
      0000E9                        357 _get_bg_tile_index_front_of_snake::
      0000E9 3B                     358 	dec	sp
                           0000EA   359 	C$snake_logic.c$55$1_0$106	= .
                                    360 	.globl	C$snake_logic.c$55$1_0$106
                                    361 ;src/snake_logic.c:55: return get_bkg_tile_xy((snake.x / SNAKE_MOVEMENT_STEP) - 1, (snake.y / SNAKE_MOVEMENT_STEP) - 2);
      0000EA FAr01r00               362 	ld	a, (#(_snake + 1) + 0)
      0000ED 4F                     363 	ld	c, a
      0000EE 06 00                  364 	ld	b, #0x00
      0000F0 69                     365 	ld	l, c
                                    366 ;	spillPairReg hl
                                    367 ;	spillPairReg hl
      0000F1 60                     368 	ld	h, b
                                    369 ;	spillPairReg hl
                                    370 ;	spillPairReg hl
      0000F2 CB 78                  371 	bit	7, b
      0000F4 28 04                  372 	jr	Z, 00103$
      0000F6 21 07 00               373 	ld	hl, #0x0007
      0000F9 09                     374 	add	hl, bc
      0000FA                        375 00103$:
      0000FA CB 2C                  376 	sra	h
      0000FC CB 1D                  377 	rr	l
      0000FE CB 2C                  378 	sra	h
      000100 CB 1D                  379 	rr	l
      000102 CB 2C                  380 	sra	h
      000104 CB 1D                  381 	rr	l
      000106 7D                     382 	ld	a, l
      000107 C6 FE                  383 	add	a, #0xfe
      000109 F8 00                  384 	ldhl	sp,	#0
      00010B 77                     385 	ld	(hl), a
      00010C FAr00r00               386 	ld	a, (#_snake + 0)
      00010F 4F                     387 	ld	c, a
      000110 06 00                  388 	ld	b, #0x00
      000112 69                     389 	ld	l, c
                                    390 ;	spillPairReg hl
                                    391 ;	spillPairReg hl
      000113 60                     392 	ld	h, b
                                    393 ;	spillPairReg hl
                                    394 ;	spillPairReg hl
      000114 CB 78                  395 	bit	7, b
      000116 28 04                  396 	jr	Z, 00104$
      000118 21 07 00               397 	ld	hl, #0x0007
      00011B 09                     398 	add	hl, bc
      00011C                        399 00104$:
      00011C CB 2C                  400 	sra	h
      00011E CB 1D                  401 	rr	l
      000120 CB 2C                  402 	sra	h
      000122 CB 1D                  403 	rr	l
      000124 CB 2C                  404 	sra	h
      000126 CB 1D                  405 	rr	l
      000128 7D                     406 	ld	a, l
      000129 3D                     407 	dec	a
      00012A F8 00                  408 	ldhl	sp,	#0
      00012C 66                     409 	ld	h, (hl)
                                    410 ;	spillPairReg hl
                                    411 ;	spillPairReg hl
      00012D E5                     412 	push	hl
      00012E 33                     413 	inc	sp
      00012F F5                     414 	push	af
      000130 33                     415 	inc	sp
      000131 CDr00r00               416 	call	_get_bkg_tile_xy
      000134 E1                     417 	pop	hl
                           000135   418 	C$snake_logic.c$56$1_0$106	= .
                                    419 	.globl	C$snake_logic.c$56$1_0$106
                                    420 ;src/snake_logic.c:56: }
      000135 33                     421 	inc	sp
                           000136   422 	C$snake_logic.c$56$1_0$106	= .
                                    423 	.globl	C$snake_logic.c$56$1_0$106
                           000136   424 	XG$get_bg_tile_index_front_of_snake$0$0	= .
                                    425 	.globl	XG$get_bg_tile_index_front_of_snake$0$0
      000136 C9                     426 	ret
                           000137   427 	G$check_collision_with_wall$0$0	= .
                                    428 	.globl	G$check_collision_with_wall$0$0
                           000137   429 	C$snake_logic.c$58$1_0$107	= .
                                    430 	.globl	C$snake_logic.c$58$1_0$107
                                    431 ;src/snake_logic.c:58: BOOLEAN check_collision_with_wall()
                                    432 ;	---------------------------------
                                    433 ; Function check_collision_with_wall
                                    434 ; ---------------------------------
      000137                        435 _check_collision_with_wall::
                           000137   436 	C$snake_logic.c$60$1_0$107	= .
                                    437 	.globl	C$snake_logic.c$60$1_0$107
                                    438 ;src/snake_logic.c:60: uint8_t nextTileIndex = get_bg_tile_index_front_of_snake();
      000137 CDrE9r00               439 	call	_get_bg_tile_index_front_of_snake
                           00013A   440 	C$snake_logic.c$61$1_0$107	= .
                                    441 	.globl	C$snake_logic.c$61$1_0$107
                                    442 ;src/snake_logic.c:61: return nextTileIndex >= 1u && nextTileIndex <= 9u;
      00013A 7B                     443 	ld	a, e
      00013B D6 01                  444 	sub	a, #0x01
      00013D 38 05                  445 	jr	C, 00103$
      00013F 3E 09                  446 	ld	a, #0x09
      000141 93                     447 	sub	a, e
      000142 30 03                  448 	jr	NC, 00104$
      000144                        449 00103$:
      000144 1E 00                  450 	ld	e, #0x00
      000146 C9                     451 	ret
      000147                        452 00104$:
      000147 1E 01                  453 	ld	e, #0x01
                           000149   454 	C$snake_logic.c$62$1_0$107	= .
                                    455 	.globl	C$snake_logic.c$62$1_0$107
                                    456 ;src/snake_logic.c:62: }
                           000149   457 	C$snake_logic.c$62$1_0$107	= .
                                    458 	.globl	C$snake_logic.c$62$1_0$107
                           000149   459 	XG$check_collision_with_wall$0$0	= .
                                    460 	.globl	XG$check_collision_with_wall$0$0
      000149 C9                     461 	ret
                           00014A   462 	G$is_snake_moving_up$0$0	= .
                                    463 	.globl	G$is_snake_moving_up$0$0
                           00014A   464 	C$snake_logic.c$64$1_0$108	= .
                                    465 	.globl	C$snake_logic.c$64$1_0$108
                                    466 ;src/snake_logic.c:64: BOOLEAN is_snake_moving_up()
                                    467 ;	---------------------------------
                                    468 ; Function is_snake_moving_up
                                    469 ; ---------------------------------
      00014A                        470 _is_snake_moving_up::
                           00014A   471 	C$snake_logic.c$66$1_0$108	= .
                                    472 	.globl	C$snake_logic.c$66$1_0$108
                                    473 ;src/snake_logic.c:66: return snake.direction[1] == -1 * SNAKE_MOVEMENT_STEP;
      00014A FAr03r00               474 	ld	a, (#(_snake + 3) + 0)
      00014D D6 F8                  475 	sub	a, #0xf8
      00014F 3E 01                  476 	ld	a, #0x01
      000151 28 01                  477 	jr	Z, 00104$
      000153 AF                     478 	xor	a, a
      000154                        479 00104$:
      000154 5F                     480 	ld	e, a
                           000155   481 	C$snake_logic.c$67$1_0$108	= .
                                    482 	.globl	C$snake_logic.c$67$1_0$108
                                    483 ;src/snake_logic.c:67: }
                           000155   484 	C$snake_logic.c$67$1_0$108	= .
                                    485 	.globl	C$snake_logic.c$67$1_0$108
                           000155   486 	XG$is_snake_moving_up$0$0	= .
                                    487 	.globl	XG$is_snake_moving_up$0$0
      000155 C9                     488 	ret
                           000156   489 	G$is_snake_moving_left$0$0	= .
                                    490 	.globl	G$is_snake_moving_left$0$0
                           000156   491 	C$snake_logic.c$69$1_0$109	= .
                                    492 	.globl	C$snake_logic.c$69$1_0$109
                                    493 ;src/snake_logic.c:69: BOOLEAN is_snake_moving_left()
                                    494 ;	---------------------------------
                                    495 ; Function is_snake_moving_left
                                    496 ; ---------------------------------
      000156                        497 _is_snake_moving_left::
                           000156   498 	C$snake_logic.c$71$1_0$109	= .
                                    499 	.globl	C$snake_logic.c$71$1_0$109
                                    500 ;src/snake_logic.c:71: return snake.direction[0] == -1 * SNAKE_MOVEMENT_STEP;
      000156 FAr02r00               501 	ld	a, (#(_snake + 2) + 0)
      000159 D6 F8                  502 	sub	a, #0xf8
      00015B 3E 01                  503 	ld	a, #0x01
      00015D 28 01                  504 	jr	Z, 00104$
      00015F AF                     505 	xor	a, a
      000160                        506 00104$:
      000160 5F                     507 	ld	e, a
                           000161   508 	C$snake_logic.c$72$1_0$109	= .
                                    509 	.globl	C$snake_logic.c$72$1_0$109
                                    510 ;src/snake_logic.c:72: }
                           000161   511 	C$snake_logic.c$72$1_0$109	= .
                                    512 	.globl	C$snake_logic.c$72$1_0$109
                           000161   513 	XG$is_snake_moving_left$0$0	= .
                                    514 	.globl	XG$is_snake_moving_left$0$0
      000161 C9                     515 	ret
                           000162   516 	G$move_right$0$0	= .
                                    517 	.globl	G$move_right$0$0
                           000162   518 	C$snake_logic.c$74$1_0$110	= .
                                    519 	.globl	C$snake_logic.c$74$1_0$110
                                    520 ;src/snake_logic.c:74: void move_right()
                                    521 ;	---------------------------------
                                    522 ; Function move_right
                                    523 ; ---------------------------------
      000162                        524 _move_right::
      000162 3B                     525 	dec	sp
      000163 3B                     526 	dec	sp
                           000164   527 	C$snake_logic.c$76$1_0$110	= .
                                    528 	.globl	C$snake_logic.c$76$1_0$110
                                    529 ;src/snake_logic.c:76: UINT8 *turnaraoundMapValue = &turnaraoundMap[snake.x / 8][snake.y / 8];
      000164 FAr00r00               530 	ld	a, (#_snake + 0)
      000167 4F                     531 	ld	c, a
      000168 06 00                  532 	ld	b, #0x00
      00016A 69                     533 	ld	l, c
                                    534 ;	spillPairReg hl
                                    535 ;	spillPairReg hl
      00016B 60                     536 	ld	h, b
                                    537 ;	spillPairReg hl
                                    538 ;	spillPairReg hl
      00016C CB 78                  539 	bit	7, b
      00016E 28 04                  540 	jr	Z, 00106$
      000170 21 07 00               541 	ld	hl, #0x0007
      000173 09                     542 	add	hl, bc
      000174                        543 00106$:
      000174 CB 2C                  544 	sra	h
      000176 CB 1D                  545 	rr	l
      000178 CB 2C                  546 	sra	h
      00017A CB 1D                  547 	rr	l
      00017C CB 2C                  548 	sra	h
      00017E CB 1D                  549 	rr	l
      000180 4D                     550 	ld	c, l
      000181 44                     551 	ld	b, h
      000182 29                     552 	add	hl, hl
      000183 09                     553 	add	hl, bc
      000184 29                     554 	add	hl, hl
      000185 29                     555 	add	hl, hl
      000186 29                     556 	add	hl, hl
      000187 09                     557 	add	hl, bc
      000188 01r59r00               558 	ld	bc,#_turnaraoundMap
      00018B 09                     559 	add	hl,bc
      00018C 33                     560 	inc	sp
      00018D 33                     561 	inc	sp
      00018E E5                     562 	push	hl
      00018F FAr01r00               563 	ld	a, (#(_snake + 1) + 0)
      000192 4F                     564 	ld	c, a
      000193 06 00                  565 	ld	b, #0x00
      000195 69                     566 	ld	l, c
                                    567 ;	spillPairReg hl
                                    568 ;	spillPairReg hl
      000196 60                     569 	ld	h, b
                                    570 ;	spillPairReg hl
                                    571 ;	spillPairReg hl
      000197 CB 78                  572 	bit	7, b
      000199 28 04                  573 	jr	Z, 00107$
      00019B 21 07 00               574 	ld	hl, #0x0007
      00019E 09                     575 	add	hl, bc
      00019F                        576 00107$:
      00019F 4D                     577 	ld	c, l
      0001A0 44                     578 	ld	b, h
      0001A1 CB 28                  579 	sra	b
      0001A3 CB 19                  580 	rr	c
      0001A5 CB 28                  581 	sra	b
      0001A7 CB 19                  582 	rr	c
      0001A9 CB 28                  583 	sra	b
      0001AB CB 19                  584 	rr	c
      0001AD E1                     585 	pop	hl
      0001AE E5                     586 	push	hl
      0001AF 09                     587 	add	hl, bc
                           0001B0   588 	C$snake_logic.c$77$1_0$110	= .
                                    589 	.globl	C$snake_logic.c$77$1_0$110
                                    590 ;src/snake_logic.c:77: reset_snake_head_props();
      0001B0 E5                     591 	push	hl
      0001B1 CDr7Fr00               592 	call	_reset_snake_head_props
      0001B4 C1                     593 	pop	bc
                           0001B5   594 	C$snake_logic.c$78$1_0$110	= .
                                    595 	.globl	C$snake_logic.c$78$1_0$110
                                    596 ;src/snake_logic.c:78: snake.snakeHeadspriteProp += HORIZONTAL_FLIP;
      0001B5 11r56r00               597 	ld	de, #_snake + 86
      0001B8 1A                     598 	ld	a, (de)
      0001B9 C6 20                  599 	add	a, #0x20
      0001BB 12                     600 	ld	(de), a
                           0001BC   601 	C$snake_logic.c$79$1_0$110	= .
                                    602 	.globl	C$snake_logic.c$79$1_0$110
                                    603 ;src/snake_logic.c:79: snake.snakeHeadSpriteIndex = 1u;
      0001BC 21r57r00               604 	ld	hl, #(_snake + 87)
      0001BF 36 01                  605 	ld	(hl), #0x01
                           0001C1   606 	C$snake_logic.c$80$1_0$110	= .
                                    607 	.globl	C$snake_logic.c$80$1_0$110
                                    608 ;src/snake_logic.c:80: if (is_snake_moving_up())
      0001C1 C5                     609 	push	bc
      0001C2 CDr4Ar01               610 	call	_is_snake_moving_up
      0001C5 7B                     611 	ld	a, e
      0001C6 C1                     612 	pop	bc
      0001C7 B7                     613 	or	a, a
      0001C8 28 05                  614 	jr	Z, 00102$
                           0001CA   615 	C$snake_logic.c$82$2_0$111	= .
                                    616 	.globl	C$snake_logic.c$82$2_0$111
                                    617 ;src/snake_logic.c:82: *turnaraoundMapValue = VERTICAL_FLIP;
      0001CA 3E 40                  618 	ld	a, #0x40
      0001CC 02                     619 	ld	(bc), a
      0001CD 18 03                  620 	jr	00103$
      0001CF                        621 00102$:
                           0001CF   622 	C$snake_logic.c$86$2_0$112	= .
                                    623 	.globl	C$snake_logic.c$86$2_0$112
                                    624 ;src/snake_logic.c:86: *turnaraoundMapValue = 128;
      0001CF 3E 80                  625 	ld	a, #0x80
      0001D1 02                     626 	ld	(bc), a
      0001D2                        627 00103$:
                           0001D2   628 	C$snake_logic.c$89$1_0$110	= .
                                    629 	.globl	C$snake_logic.c$89$1_0$110
                                    630 ;src/snake_logic.c:89: snake.direction[0] = 1 * SNAKE_MOVEMENT_STEP;
      0001D2 21r02r00               631 	ld	hl, #(_snake + 2)
      0001D5 36 08                  632 	ld	(hl), #0x08
                           0001D7   633 	C$snake_logic.c$90$1_0$110	= .
                                    634 	.globl	C$snake_logic.c$90$1_0$110
                                    635 ;src/snake_logic.c:90: snake.direction[1] = 0 * SNAKE_MOVEMENT_STEP;
      0001D7 21r03r00               636 	ld	hl, #(_snake + 3)
      0001DA 36 00                  637 	ld	(hl), #0x00
                           0001DC   638 	C$snake_logic.c$91$1_0$110	= .
                                    639 	.globl	C$snake_logic.c$91$1_0$110
                                    640 ;src/snake_logic.c:91: }
      0001DC 33                     641 	inc	sp
      0001DD 33                     642 	inc	sp
                           0001DE   643 	C$snake_logic.c$91$1_0$110	= .
                                    644 	.globl	C$snake_logic.c$91$1_0$110
                           0001DE   645 	XG$move_right$0$0	= .
                                    646 	.globl	XG$move_right$0$0
      0001DE C9                     647 	ret
                           0001DF   648 	G$move_left$0$0	= .
                                    649 	.globl	G$move_left$0$0
                           0001DF   650 	C$snake_logic.c$92$1_0$113	= .
                                    651 	.globl	C$snake_logic.c$92$1_0$113
                                    652 ;src/snake_logic.c:92: void move_left()
                                    653 ;	---------------------------------
                                    654 ; Function move_left
                                    655 ; ---------------------------------
      0001DF                        656 _move_left::
      0001DF 3B                     657 	dec	sp
      0001E0 3B                     658 	dec	sp
                           0001E1   659 	C$snake_logic.c$94$1_0$113	= .
                                    660 	.globl	C$snake_logic.c$94$1_0$113
                                    661 ;src/snake_logic.c:94: UINT8 *turnaraoundMapValue = &turnaraoundMap[snake.x / 8][snake.y / 8];
      0001E1 FAr00r00               662 	ld	a, (#_snake + 0)
      0001E4 4F                     663 	ld	c, a
      0001E5 06 00                  664 	ld	b, #0x00
      0001E7 69                     665 	ld	l, c
                                    666 ;	spillPairReg hl
                                    667 ;	spillPairReg hl
      0001E8 60                     668 	ld	h, b
                                    669 ;	spillPairReg hl
                                    670 ;	spillPairReg hl
      0001E9 CB 78                  671 	bit	7, b
      0001EB 28 04                  672 	jr	Z, 00106$
      0001ED 21 07 00               673 	ld	hl, #0x0007
      0001F0 09                     674 	add	hl, bc
      0001F1                        675 00106$:
      0001F1 CB 2C                  676 	sra	h
      0001F3 CB 1D                  677 	rr	l
      0001F5 CB 2C                  678 	sra	h
      0001F7 CB 1D                  679 	rr	l
      0001F9 CB 2C                  680 	sra	h
      0001FB CB 1D                  681 	rr	l
      0001FD 4D                     682 	ld	c, l
      0001FE 44                     683 	ld	b, h
      0001FF 29                     684 	add	hl, hl
      000200 09                     685 	add	hl, bc
      000201 29                     686 	add	hl, hl
      000202 29                     687 	add	hl, hl
      000203 29                     688 	add	hl, hl
      000204 09                     689 	add	hl, bc
      000205 01r59r00               690 	ld	bc,#_turnaraoundMap
      000208 09                     691 	add	hl,bc
      000209 33                     692 	inc	sp
      00020A 33                     693 	inc	sp
      00020B E5                     694 	push	hl
      00020C FAr01r00               695 	ld	a, (#(_snake + 1) + 0)
      00020F 4F                     696 	ld	c, a
      000210 06 00                  697 	ld	b, #0x00
      000212 69                     698 	ld	l, c
                                    699 ;	spillPairReg hl
                                    700 ;	spillPairReg hl
      000213 60                     701 	ld	h, b
                                    702 ;	spillPairReg hl
                                    703 ;	spillPairReg hl
      000214 CB 78                  704 	bit	7, b
      000216 28 04                  705 	jr	Z, 00107$
      000218 21 07 00               706 	ld	hl, #0x0007
      00021B 09                     707 	add	hl, bc
      00021C                        708 00107$:
      00021C 4D                     709 	ld	c, l
      00021D 44                     710 	ld	b, h
      00021E CB 28                  711 	sra	b
      000220 CB 19                  712 	rr	c
      000222 CB 28                  713 	sra	b
      000224 CB 19                  714 	rr	c
      000226 CB 28                  715 	sra	b
      000228 CB 19                  716 	rr	c
      00022A E1                     717 	pop	hl
      00022B E5                     718 	push	hl
      00022C 09                     719 	add	hl, bc
                           00022D   720 	C$snake_logic.c$95$1_0$113	= .
                                    721 	.globl	C$snake_logic.c$95$1_0$113
                                    722 ;src/snake_logic.c:95: reset_snake_head_props();
      00022D E5                     723 	push	hl
      00022E CDr7Fr00               724 	call	_reset_snake_head_props
      000231 CDr4Ar01               725 	call	_is_snake_moving_up
      000234 7B                     726 	ld	a, e
      000235 C1                     727 	pop	bc
      000236 B7                     728 	or	a, a
      000237 28 05                  729 	jr	Z, 00102$
                           000239   730 	C$snake_logic.c$98$2_0$114	= .
                                    731 	.globl	C$snake_logic.c$98$2_0$114
                                    732 ;src/snake_logic.c:98: *turnaraoundMapValue = VERTICAL_FLIP + HORIZONTAL_FLIP;
      000239 3E 60                  733 	ld	a, #0x60
      00023B 02                     734 	ld	(bc), a
      00023C 18 03                  735 	jr	00103$
      00023E                        736 00102$:
                           00023E   737 	C$snake_logic.c$102$2_0$115	= .
                                    738 	.globl	C$snake_logic.c$102$2_0$115
                                    739 ;src/snake_logic.c:102: *turnaraoundMapValue = HORIZONTAL_FLIP;
      00023E 3E 20                  740 	ld	a, #0x20
      000240 02                     741 	ld	(bc), a
      000241                        742 00103$:
                           000241   743 	C$snake_logic.c$105$1_0$113	= .
                                    744 	.globl	C$snake_logic.c$105$1_0$113
                                    745 ;src/snake_logic.c:105: snake.direction[0] = -1 * SNAKE_MOVEMENT_STEP;
      000241 21r02r00               746 	ld	hl, #(_snake + 2)
      000244 36 F8                  747 	ld	(hl), #0xf8
                           000246   748 	C$snake_logic.c$106$1_0$113	= .
                                    749 	.globl	C$snake_logic.c$106$1_0$113
                                    750 ;src/snake_logic.c:106: snake.direction[1] = 0 * SNAKE_MOVEMENT_STEP;
      000246 21r03r00               751 	ld	hl, #(_snake + 3)
      000249 36 00                  752 	ld	(hl), #0x00
                           00024B   753 	C$snake_logic.c$107$1_0$113	= .
                                    754 	.globl	C$snake_logic.c$107$1_0$113
                                    755 ;src/snake_logic.c:107: }
      00024B 33                     756 	inc	sp
      00024C 33                     757 	inc	sp
                           00024D   758 	C$snake_logic.c$107$1_0$113	= .
                                    759 	.globl	C$snake_logic.c$107$1_0$113
                           00024D   760 	XG$move_left$0$0	= .
                                    761 	.globl	XG$move_left$0$0
      00024D C9                     762 	ret
                           00024E   763 	G$move_up$0$0	= .
                                    764 	.globl	G$move_up$0$0
                           00024E   765 	C$snake_logic.c$108$1_0$116	= .
                                    766 	.globl	C$snake_logic.c$108$1_0$116
                                    767 ;src/snake_logic.c:108: void move_up()
                                    768 ;	---------------------------------
                                    769 ; Function move_up
                                    770 ; ---------------------------------
      00024E                        771 _move_up::
      00024E 3B                     772 	dec	sp
      00024F 3B                     773 	dec	sp
                           000250   774 	C$snake_logic.c$110$1_0$116	= .
                                    775 	.globl	C$snake_logic.c$110$1_0$116
                                    776 ;src/snake_logic.c:110: UINT8 *turnaraoundMapValue = &turnaraoundMap[snake.x / 8][snake.y / 8];
      000250 FAr00r00               777 	ld	a, (#_snake + 0)
      000253 4F                     778 	ld	c, a
      000254 06 00                  779 	ld	b, #0x00
      000256 69                     780 	ld	l, c
                                    781 ;	spillPairReg hl
                                    782 ;	spillPairReg hl
      000257 60                     783 	ld	h, b
                                    784 ;	spillPairReg hl
                                    785 ;	spillPairReg hl
      000258 CB 78                  786 	bit	7, b
      00025A 28 04                  787 	jr	Z, 00106$
      00025C 21 07 00               788 	ld	hl, #0x0007
      00025F 09                     789 	add	hl, bc
      000260                        790 00106$:
      000260 CB 2C                  791 	sra	h
      000262 CB 1D                  792 	rr	l
      000264 CB 2C                  793 	sra	h
      000266 CB 1D                  794 	rr	l
      000268 CB 2C                  795 	sra	h
      00026A CB 1D                  796 	rr	l
      00026C 4D                     797 	ld	c, l
      00026D 44                     798 	ld	b, h
      00026E 29                     799 	add	hl, hl
      00026F 09                     800 	add	hl, bc
      000270 29                     801 	add	hl, hl
      000271 29                     802 	add	hl, hl
      000272 29                     803 	add	hl, hl
      000273 09                     804 	add	hl, bc
      000274 01r59r00               805 	ld	bc,#_turnaraoundMap
      000277 09                     806 	add	hl,bc
      000278 33                     807 	inc	sp
      000279 33                     808 	inc	sp
      00027A E5                     809 	push	hl
      00027B FAr01r00               810 	ld	a, (#(_snake + 1) + 0)
      00027E 4F                     811 	ld	c, a
      00027F 06 00                  812 	ld	b, #0x00
      000281 69                     813 	ld	l, c
                                    814 ;	spillPairReg hl
                                    815 ;	spillPairReg hl
      000282 60                     816 	ld	h, b
                                    817 ;	spillPairReg hl
                                    818 ;	spillPairReg hl
      000283 CB 78                  819 	bit	7, b
      000285 28 04                  820 	jr	Z, 00107$
      000287 21 07 00               821 	ld	hl, #0x0007
      00028A 09                     822 	add	hl, bc
      00028B                        823 00107$:
      00028B 4D                     824 	ld	c, l
      00028C 44                     825 	ld	b, h
      00028D CB 28                  826 	sra	b
      00028F CB 19                  827 	rr	c
      000291 CB 28                  828 	sra	b
      000293 CB 19                  829 	rr	c
      000295 CB 28                  830 	sra	b
      000297 CB 19                  831 	rr	c
      000299 E1                     832 	pop	hl
      00029A E5                     833 	push	hl
      00029B 09                     834 	add	hl, bc
                           00029C   835 	C$snake_logic.c$111$1_0$116	= .
                                    836 	.globl	C$snake_logic.c$111$1_0$116
                                    837 ;src/snake_logic.c:111: reset_snake_head_props();
      00029C E5                     838 	push	hl
      00029D CDr7Fr00               839 	call	_reset_snake_head_props
      0002A0 C1                     840 	pop	bc
                           0002A1   841 	C$snake_logic.c$112$1_0$116	= .
                                    842 	.globl	C$snake_logic.c$112$1_0$116
                                    843 ;src/snake_logic.c:112: snake.snakeHeadSpriteIndex = 5u;
      0002A1 21r57r00               844 	ld	hl, #(_snake + 87)
      0002A4 36 05                  845 	ld	(hl), #0x05
                           0002A6   846 	C$snake_logic.c$113$1_0$116	= .
                                    847 	.globl	C$snake_logic.c$113$1_0$116
                                    848 ;src/snake_logic.c:113: if (is_snake_moving_left())
      0002A6 C5                     849 	push	bc
      0002A7 CDr56r01               850 	call	_is_snake_moving_left
      0002AA 7B                     851 	ld	a, e
      0002AB C1                     852 	pop	bc
      0002AC B7                     853 	or	a, a
      0002AD 28 05                  854 	jr	Z, 00102$
                           0002AF   855 	C$snake_logic.c$115$2_0$117	= .
                                    856 	.globl	C$snake_logic.c$115$2_0$117
                                    857 ;src/snake_logic.c:115: *turnaraoundMapValue = 128;
      0002AF 3E 80                  858 	ld	a, #0x80
      0002B1 02                     859 	ld	(bc), a
      0002B2 18 03                  860 	jr	00103$
      0002B4                        861 00102$:
                           0002B4   862 	C$snake_logic.c$119$2_0$118	= .
                                    863 	.globl	C$snake_logic.c$119$2_0$118
                                    864 ;src/snake_logic.c:119: *turnaraoundMapValue = HORIZONTAL_FLIP;
      0002B4 3E 20                  865 	ld	a, #0x20
      0002B6 02                     866 	ld	(bc), a
      0002B7                        867 00103$:
                           0002B7   868 	C$snake_logic.c$122$1_0$116	= .
                                    869 	.globl	C$snake_logic.c$122$1_0$116
                                    870 ;src/snake_logic.c:122: snake.direction[0] = 0 * SNAKE_MOVEMENT_STEP;
      0002B7 21r02r00               871 	ld	hl, #(_snake + 2)
      0002BA 36 00                  872 	ld	(hl), #0x00
                           0002BC   873 	C$snake_logic.c$123$1_0$116	= .
                                    874 	.globl	C$snake_logic.c$123$1_0$116
                                    875 ;src/snake_logic.c:123: snake.direction[1] = -1 * SNAKE_MOVEMENT_STEP;
      0002BC 21r03r00               876 	ld	hl, #(_snake + 3)
      0002BF 36 F8                  877 	ld	(hl), #0xf8
                           0002C1   878 	C$snake_logic.c$124$1_0$116	= .
                                    879 	.globl	C$snake_logic.c$124$1_0$116
                                    880 ;src/snake_logic.c:124: }
      0002C1 33                     881 	inc	sp
      0002C2 33                     882 	inc	sp
                           0002C3   883 	C$snake_logic.c$124$1_0$116	= .
                                    884 	.globl	C$snake_logic.c$124$1_0$116
                           0002C3   885 	XG$move_up$0$0	= .
                                    886 	.globl	XG$move_up$0$0
      0002C3 C9                     887 	ret
                           0002C4   888 	G$move_down$0$0	= .
                                    889 	.globl	G$move_down$0$0
                           0002C4   890 	C$snake_logic.c$125$1_0$119	= .
                                    891 	.globl	C$snake_logic.c$125$1_0$119
                                    892 ;src/snake_logic.c:125: void move_down()
                                    893 ;	---------------------------------
                                    894 ; Function move_down
                                    895 ; ---------------------------------
      0002C4                        896 _move_down::
      0002C4 3B                     897 	dec	sp
      0002C5 3B                     898 	dec	sp
                           0002C6   899 	C$snake_logic.c$127$1_0$119	= .
                                    900 	.globl	C$snake_logic.c$127$1_0$119
                                    901 ;src/snake_logic.c:127: UINT8 *turnaraoundMapValue = &turnaraoundMap[snake.x / 8][snake.y / 8];
      0002C6 FAr00r00               902 	ld	a, (#_snake + 0)
      0002C9 4F                     903 	ld	c, a
      0002CA 06 00                  904 	ld	b, #0x00
      0002CC 69                     905 	ld	l, c
                                    906 ;	spillPairReg hl
                                    907 ;	spillPairReg hl
      0002CD 60                     908 	ld	h, b
                                    909 ;	spillPairReg hl
                                    910 ;	spillPairReg hl
      0002CE CB 78                  911 	bit	7, b
      0002D0 28 04                  912 	jr	Z, 00106$
      0002D2 21 07 00               913 	ld	hl, #0x0007
      0002D5 09                     914 	add	hl, bc
      0002D6                        915 00106$:
      0002D6 CB 2C                  916 	sra	h
      0002D8 CB 1D                  917 	rr	l
      0002DA CB 2C                  918 	sra	h
      0002DC CB 1D                  919 	rr	l
      0002DE CB 2C                  920 	sra	h
      0002E0 CB 1D                  921 	rr	l
      0002E2 4D                     922 	ld	c, l
      0002E3 44                     923 	ld	b, h
      0002E4 29                     924 	add	hl, hl
      0002E5 09                     925 	add	hl, bc
      0002E6 29                     926 	add	hl, hl
      0002E7 29                     927 	add	hl, hl
      0002E8 29                     928 	add	hl, hl
      0002E9 09                     929 	add	hl, bc
      0002EA 01r59r00               930 	ld	bc,#_turnaraoundMap
      0002ED 09                     931 	add	hl,bc
      0002EE 33                     932 	inc	sp
      0002EF 33                     933 	inc	sp
      0002F0 E5                     934 	push	hl
      0002F1 FAr01r00               935 	ld	a, (#(_snake + 1) + 0)
      0002F4 4F                     936 	ld	c, a
      0002F5 06 00                  937 	ld	b, #0x00
      0002F7 69                     938 	ld	l, c
                                    939 ;	spillPairReg hl
                                    940 ;	spillPairReg hl
      0002F8 60                     941 	ld	h, b
                                    942 ;	spillPairReg hl
                                    943 ;	spillPairReg hl
      0002F9 CB 78                  944 	bit	7, b
      0002FB 28 04                  945 	jr	Z, 00107$
      0002FD 21 07 00               946 	ld	hl, #0x0007
      000300 09                     947 	add	hl, bc
      000301                        948 00107$:
      000301 4D                     949 	ld	c, l
      000302 44                     950 	ld	b, h
      000303 CB 28                  951 	sra	b
      000305 CB 19                  952 	rr	c
      000307 CB 28                  953 	sra	b
      000309 CB 19                  954 	rr	c
      00030B CB 28                  955 	sra	b
      00030D CB 19                  956 	rr	c
      00030F E1                     957 	pop	hl
      000310 E5                     958 	push	hl
      000311 09                     959 	add	hl, bc
                           000312   960 	C$snake_logic.c$128$1_0$119	= .
                                    961 	.globl	C$snake_logic.c$128$1_0$119
                                    962 ;src/snake_logic.c:128: reset_snake_head_props();
      000312 E5                     963 	push	hl
      000313 CDr7Fr00               964 	call	_reset_snake_head_props
      000316 C1                     965 	pop	bc
                           000317   966 	C$snake_logic.c$129$1_0$119	= .
                                    967 	.globl	C$snake_logic.c$129$1_0$119
                                    968 ;src/snake_logic.c:129: snake.snakeHeadspriteProp += VERTICAL_FLIP;
      000317 11r56r00               969 	ld	de, #_snake + 86
      00031A 1A                     970 	ld	a, (de)
      00031B C6 40                  971 	add	a, #0x40
      00031D 12                     972 	ld	(de), a
                           00031E   973 	C$snake_logic.c$130$1_0$119	= .
                                    974 	.globl	C$snake_logic.c$130$1_0$119
                                    975 ;src/snake_logic.c:130: snake.snakeHeadSpriteIndex = 5u;
      00031E 21r57r00               976 	ld	hl, #(_snake + 87)
      000321 36 05                  977 	ld	(hl), #0x05
                           000323   978 	C$snake_logic.c$131$1_0$119	= .
                                    979 	.globl	C$snake_logic.c$131$1_0$119
                                    980 ;src/snake_logic.c:131: if (is_snake_moving_left())
      000323 C5                     981 	push	bc
      000324 CDr56r01               982 	call	_is_snake_moving_left
      000327 7B                     983 	ld	a, e
      000328 C1                     984 	pop	bc
      000329 B7                     985 	or	a, a
      00032A 28 05                  986 	jr	Z, 00102$
                           00032C   987 	C$snake_logic.c$133$2_0$120	= .
                                    988 	.globl	C$snake_logic.c$133$2_0$120
                                    989 ;src/snake_logic.c:133: *turnaraoundMapValue = VERTICAL_FLIP;
      00032C 3E 40                  990 	ld	a, #0x40
      00032E 02                     991 	ld	(bc), a
      00032F 18 03                  992 	jr	00103$
      000331                        993 00102$:
                           000331   994 	C$snake_logic.c$137$2_0$121	= .
                                    995 	.globl	C$snake_logic.c$137$2_0$121
                                    996 ;src/snake_logic.c:137: *turnaraoundMapValue = VERTICAL_FLIP + HORIZONTAL_FLIP;
      000331 3E 60                  997 	ld	a, #0x60
      000333 02                     998 	ld	(bc), a
      000334                        999 00103$:
                           000334  1000 	C$snake_logic.c$140$1_0$119	= .
                                   1001 	.globl	C$snake_logic.c$140$1_0$119
                                   1002 ;src/snake_logic.c:140: snake.direction[0] = 0 * SNAKE_MOVEMENT_STEP;
      000334 21r02r00              1003 	ld	hl, #(_snake + 2)
      000337 36 00                 1004 	ld	(hl), #0x00
                           000339  1005 	C$snake_logic.c$141$1_0$119	= .
                                   1006 	.globl	C$snake_logic.c$141$1_0$119
                                   1007 ;src/snake_logic.c:141: snake.direction[1] = 1 * SNAKE_MOVEMENT_STEP;
      000339 21r03r00              1008 	ld	hl, #(_snake + 3)
      00033C 36 08                 1009 	ld	(hl), #0x08
                           00033E  1010 	C$snake_logic.c$142$1_0$119	= .
                                   1011 	.globl	C$snake_logic.c$142$1_0$119
                                   1012 ;src/snake_logic.c:142: }
      00033E 33                    1013 	inc	sp
      00033F 33                    1014 	inc	sp
                           000340  1015 	C$snake_logic.c$142$1_0$119	= .
                                   1016 	.globl	C$snake_logic.c$142$1_0$119
                           000340  1017 	XG$move_down$0$0	= .
                                   1018 	.globl	XG$move_down$0$0
      000340 C9                    1019 	ret
                           000341  1020 	G$move_snake$0$0	= .
                                   1021 	.globl	G$move_snake$0$0
                           000341  1022 	C$snake_logic.c$146$1_0$122	= .
                                   1023 	.globl	C$snake_logic.c$146$1_0$122
                                   1024 ;src/snake_logic.c:146: void move_snake()
                                   1025 ;	---------------------------------
                                   1026 ; Function move_snake
                                   1027 ; ---------------------------------
      000341                       1028 _move_snake::
      000341 E8 F5                 1029 	add	sp, #-11
                           000343  1030 	C$snake_logic.c$148$1_0$122	= .
                                   1031 	.globl	C$snake_logic.c$148$1_0$122
                                   1032 ;src/snake_logic.c:148: time_t clockValue = clock();
      000343 CDr00r00              1033 	call	_clock
                           000346  1034 	C$snake_logic.c$149$1_0$122	= .
                                   1035 	.globl	C$snake_logic.c$149$1_0$122
                                   1036 ;src/snake_logic.c:149: UINT16 deltaTime = clockValue - lastTime;
      000346 7B                    1037 	ld	a, e
      000347 21r00r00              1038 	ld	hl, #_lastTime
      00034A 96                    1039 	sub	a, (hl)
      00034B 23                    1040 	inc	hl
      00034C 4F                    1041 	ld	c, a
      00034D 7A                    1042 	ld	a, d
      00034E 9E                    1043 	sbc	a, (hl)
                           00034F  1044 	C$snake_logic.c$150$1_0$122	= .
                                   1045 	.globl	C$snake_logic.c$150$1_0$122
                                   1046 ;src/snake_logic.c:150: lastTime = clockValue;
      00034F 2B                    1047 	dec	hl
      000350 47                    1048 	ld	b, a
      000351 7B                    1049 	ld	a, e
      000352 22                    1050 	ld	(hl+), a
      000353 72                    1051 	ld	(hl), d
                           000354  1052 	C$snake_logic.c$151$1_0$122	= .
                                   1053 	.globl	C$snake_logic.c$151$1_0$122
                                   1054 ;src/snake_logic.c:151: timeCounter += deltaTime;
      000354 21r02r00              1055 	ld	hl, #_timeCounter
      000357 7E                    1056 	ld	a, (hl)
      000358 81                    1057 	add	a, c
      000359 22                    1058 	ld	(hl+), a
      00035A 7E                    1059 	ld	a, (hl)
      00035B 88                    1060 	adc	a, b
      00035C 77                    1061 	ld	(hl), a
                           00035D  1062 	C$snake_logic.c$153$1_0$122	= .
                                   1063 	.globl	C$snake_logic.c$153$1_0$122
                                   1064 ;src/snake_logic.c:153: if (timeCounter > speed[snake.currentSpeed])
      00035D 01r71r00              1065 	ld	bc, #_speed+0
      000360 FAr58r00              1066 	ld	a, (#(_snake + 88) + 0)
      000363 6F                    1067 	ld	l, a
                                   1068 ;	spillPairReg hl
                                   1069 ;	spillPairReg hl
      000364 26 00                 1070 	ld	h, #0x00
                                   1071 ;	spillPairReg hl
                                   1072 ;	spillPairReg hl
      000366 29                    1073 	add	hl, hl
      000367 09                    1074 	add	hl, bc
      000368 2A                    1075 	ld	a, (hl+)
      000369 4F                    1076 	ld	c, a
      00036A 46                    1077 	ld	b, (hl)
      00036B 21r02r00              1078 	ld	hl, #_timeCounter
      00036E 79                    1079 	ld	a, c
      00036F 96                    1080 	sub	a, (hl)
      000370 23                    1081 	inc	hl
      000371 78                    1082 	ld	a, b
      000372 9E                    1083 	sbc	a, (hl)
      000373 D2r4Br06              1084 	jp	NC, 00126$
                           000376  1085 	C$snake_logic.c$155$2_0$123	= .
                                   1086 	.globl	C$snake_logic.c$155$2_0$123
                                   1087 ;src/snake_logic.c:155: timeCounter = 0;
      000376 AF                    1088 	xor	a, a
      000377 21r02r00              1089 	ld	hl, #_timeCounter
      00037A 22                    1090 	ld	(hl+), a
      00037B 77                    1091 	ld	(hl), a
                           00037C  1092 	C$snake_logic.c$157$2_1$124	= .
                                   1093 	.globl	C$snake_logic.c$157$2_1$124
                                   1094 ;src/snake_logic.c:157: UINT8 prevX = snake.x;
      00037C 21r00r00              1095 	ld	hl, #_snake
      00037F 4E                    1096 	ld	c, (hl)
      000380 F8 08                 1097 	ldhl	sp,	#8
      000382 71                    1098 	ld	(hl), c
                           000383  1099 	C$snake_logic.c$158$2_1$124	= .
                                   1100 	.globl	C$snake_logic.c$158$2_1$124
                                   1101 ;src/snake_logic.c:158: UINT8 prevY = snake.y;
      000383 FAr01r00              1102 	ld	a, (#(_snake + 1) + 0)
      000386 F8 04                 1103 	ldhl	sp,	#4
      000388 77                    1104 	ld	(hl), a
                           000389  1105 	C$snake_logic.c$160$2_1$124	= .
                                   1106 	.globl	C$snake_logic.c$160$2_1$124
                                   1107 ;src/snake_logic.c:160: snake.x += snake.direction[0];
      000389 FAr02r00              1108 	ld	a, (#(_snake + 2) + 0)
      00038C 81                    1109 	add	a, c
      00038D EAr00r00              1110 	ld	(#_snake),a
                           000390  1111 	C$snake_logic.c$161$2_1$124	= .
                                   1112 	.globl	C$snake_logic.c$161$2_1$124
                                   1113 ;src/snake_logic.c:161: snake.y += snake.direction[1];
      000390 21r01r00              1114 	ld	hl, #(_snake + 1)
      000393 4E                    1115 	ld	c, (hl)
      000394 FAr03r00              1116 	ld	a, (#(_snake + 3) + 0)
      000397 81                    1117 	add	a, c
      000398 EAr01r00              1118 	ld	(#(_snake + 1)),a
                           00039B  1119 	C$snake_logic.c$164$2_1$124	= .
                                   1120 	.globl	C$snake_logic.c$164$2_1$124
                                   1121 ;src/snake_logic.c:164: turnaraoundMap[snake.x / 8][snake.y / 8] = 0;
      00039B FAr00r00              1122 	ld	a, (#_snake + 0)
      00039E 4F                    1123 	ld	c, a
      00039F 06 00                 1124 	ld	b, #0x00
      0003A1 69                    1125 	ld	l, c
                                   1126 ;	spillPairReg hl
                                   1127 ;	spillPairReg hl
      0003A2 60                    1128 	ld	h, b
                                   1129 ;	spillPairReg hl
                                   1130 ;	spillPairReg hl
      0003A3 CB 78                 1131 	bit	7, b
      0003A5 28 04                 1132 	jr	Z, 00128$
      0003A7 21 07 00              1133 	ld	hl, #0x0007
      0003AA 09                    1134 	add	hl, bc
      0003AB                       1135 00128$:
      0003AB CB 2C                 1136 	sra	h
      0003AD CB 1D                 1137 	rr	l
      0003AF CB 2C                 1138 	sra	h
      0003B1 CB 1D                 1139 	rr	l
      0003B3 CB 2C                 1140 	sra	h
      0003B5 CB 1D                 1141 	rr	l
      0003B7 4D                    1142 	ld	c, l
      0003B8 44                    1143 	ld	b, h
      0003B9 29                    1144 	add	hl, hl
      0003BA 09                    1145 	add	hl, bc
      0003BB 29                    1146 	add	hl, hl
      0003BC 29                    1147 	add	hl, hl
      0003BD 29                    1148 	add	hl, hl
      0003BE 09                    1149 	add	hl, bc
      0003BF 01r59r00              1150 	ld	bc,#_turnaraoundMap
      0003C2 09                    1151 	add	hl,bc
      0003C3 E5                    1152 	push	hl
      0003C4 7D                    1153 	ld	a, l
      0003C5 F8 08                 1154 	ldhl	sp,	#8
      0003C7 77                    1155 	ld	(hl), a
      0003C8 E1                    1156 	pop	hl
      0003C9 7C                    1157 	ld	a, h
      0003CA F8 07                 1158 	ldhl	sp,	#7
      0003CC 22                    1159 	ld	(hl+), a
      0003CD 23                    1160 	inc	hl
      0003CE FAr01r00              1161 	ld	a, (#(_snake + 1) + 0)
      0003D1 4F                    1162 	ld	c, a
      0003D2 06 00                 1163 	ld	b, #0x00
      0003D4 79                    1164 	ld	a, c
      0003D5 22                    1165 	ld	(hl+), a
      0003D6 70                    1166 	ld	(hl), b
      0003D7 CB 78                 1167 	bit	7, b
      0003D9 28 0E                 1168 	jr	Z, 00129$
      0003DB 21 07 00              1169 	ld	hl, #0x0007
      0003DE 09                    1170 	add	hl, bc
      0003DF E5                    1171 	push	hl
      0003E0 7D                    1172 	ld	a, l
      0003E1 F8 0B                 1173 	ldhl	sp,	#11
      0003E3 77                    1174 	ld	(hl), a
      0003E4 E1                    1175 	pop	hl
      0003E5 7C                    1176 	ld	a, h
      0003E6 F8 0A                 1177 	ldhl	sp,	#10
      0003E8 77                    1178 	ld	(hl), a
      0003E9                       1179 00129$:
      0003E9 F8 09                 1180 	ldhl	sp,#9
      0003EB 2A                    1181 	ld	a, (hl+)
      0003EC 4F                    1182 	ld	c, a
      0003ED 46                    1183 	ld	b, (hl)
      0003EE CB 28                 1184 	sra	b
      0003F0 CB 19                 1185 	rr	c
      0003F2 CB 28                 1186 	sra	b
      0003F4 CB 19                 1187 	rr	c
      0003F6 CB 28                 1188 	sra	b
      0003F8 CB 19                 1189 	rr	c
      0003FA F8 06                 1190 	ldhl	sp,	#6
      0003FC 2A                    1191 	ld	a,	(hl+)
      0003FD 66                    1192 	ld	h, (hl)
      0003FE 6F                    1193 	ld	l, a
      0003FF 09                    1194 	add	hl, bc
      000400 4D                    1195 	ld	c, l
      000401 44                    1196 	ld	b, h
      000402 AF                    1197 	xor	a, a
      000403 02                    1198 	ld	(bc), a
                                   1199 ;src/snake_logic.c:166: set_sprite_tile(SNAKE_HEAD_VRAM_SPRITE_INDEX, snake.snakeHeadSpriteIndex);
      000404 21r57r00              1200 	ld	hl, #_snake + 87
      000407 4E                    1201 	ld	c, (hl)
                                   1202 ;/opt/gbdk/include/gb/gb.h:1314: shadow_OAM[nb].tile=tile;
      000408 21r02r00              1203 	ld	hl, #(_shadow_OAM + 2)
      00040B 71                    1204 	ld	(hl), c
                                   1205 ;src/snake_logic.c:167: set_sprite_prop(SNAKE_HEAD_VRAM_SPRITE_INDEX, snake.snakeHeadspriteProp);
      00040C 21r56r00              1206 	ld	hl, #_snake + 86
      00040F 4E                    1207 	ld	c, (hl)
                                   1208 ;/opt/gbdk/include/gb/gb.h:1360: shadow_OAM[nb].prop=prop;
      000410 21r03r00              1209 	ld	hl, #(_shadow_OAM + 3)
      000413 71                    1210 	ld	(hl), c
                                   1211 ;src/snake_logic.c:169: move_sprite(SNAKE_HEAD_VRAM_SPRITE_INDEX, snake.x, snake.y);
      000414 21r01r00              1212 	ld	hl, #(_snake + 1)
      000417 46                    1213 	ld	b, (hl)
      000418 21r00r00              1214 	ld	hl, #_snake
      00041B 4E                    1215 	ld	c, (hl)
                                   1216 ;/opt/gbdk/include/gb/gb.h:1387: OAM_item_t * itm = &shadow_OAM[nb];
      00041C 21r00r00              1217 	ld	hl, #_shadow_OAM
                                   1218 ;/opt/gbdk/include/gb/gb.h:1388: itm->y=y, itm->x=x;
      00041F 78                    1219 	ld	a, b
      000420 22                    1220 	ld	(hl+), a
      000421 71                    1221 	ld	(hl), c
                           000422  1222 	C$snake_logic.c$171$4_1$126	= .
                                   1223 	.globl	C$snake_logic.c$171$4_1$126
                                   1224 ;src/snake_logic.c:171: for (int i = 0; i < snake.tailLength; i++)
      000422 AF                    1225 	xor	a, a
      000423 F8 09                 1226 	ldhl	sp,	#9
      000425 22                    1227 	ld	(hl+), a
      000426 77                    1228 	ld	(hl), a
      000427                       1229 00124$:
      000427 FAr55r00              1230 	ld	a, (#(_snake + 85) + 0)
      00042A 4F                    1231 	ld	c, a
      00042B 06 00                 1232 	ld	b, #0x00
      00042D F8 09                 1233 	ldhl	sp,	#9
      00042F 2A                    1234 	ld	a, (hl+)
      000430 91                    1235 	sub	a, c
      000431 7E                    1236 	ld	a, (hl)
      000432 98                    1237 	sbc	a, b
      000433 56                    1238 	ld	d, (hl)
      000434 78                    1239 	ld	a, b
      000435 CB 7F                 1240 	bit	7,a
      000437 28 07                 1241 	jr	Z, 00198$
      000439 CB 7A                 1242 	bit	7, d
      00043B 20 08                 1243 	jr	NZ, 00199$
      00043D BF                    1244 	cp	a, a
      00043E 18 05                 1245 	jr	00199$
      000440                       1246 00198$:
      000440 CB 7A                 1247 	bit	7, d
      000442 28 01                 1248 	jr	Z, 00199$
      000444 37                    1249 	scf
      000445                       1250 00199$:
      000445 D2r4Br06              1251 	jp	NC, 00126$
                           000448  1252 	C$snake_logic.c$173$1_0$122	= .
                                   1253 	.globl	C$snake_logic.c$173$1_0$122
                                   1254 ;src/snake_logic.c:173: UINT8 currentX = snake.tail[i].x;
      000448 F8 09                 1255 	ldhl	sp,	#9
      00044A 2A                    1256 	ld	a, (hl+)
      00044B 46                    1257 	ld	b, (hl)
      00044C 87                    1258 	add	a, a
      00044D CB 10                 1259 	rl	b
      00044F C6r04                 1260 	add	a, #<((_snake + 4))
      000451 4F                    1261 	ld	c, a
      000452 78                    1262 	ld	a, b
      000453 CEs00                 1263 	adc	a, #>((_snake + 4))
      000455 47                    1264 	ld	b, a
      000456 0A                    1265 	ld	a, (bc)
      000457 F8 00                 1266 	ldhl	sp,	#0
      000459 77                    1267 	ld	(hl), a
                           00045A  1268 	C$snake_logic.c$174$1_0$122	= .
                                   1269 	.globl	C$snake_logic.c$174$1_0$122
                                   1270 ;src/snake_logic.c:174: UINT8 currentY = snake.tail[i].y;
      00045A 69                    1271 	ld	l, c
      00045B 60                    1272 	ld	h, b
      00045C 23                    1273 	inc	hl
      00045D E5                    1274 	push	hl
      00045E 7D                    1275 	ld	a, l
      00045F F8 07                 1276 	ldhl	sp,	#7
      000461 77                    1277 	ld	(hl), a
      000462 E1                    1278 	pop	hl
      000463 7C                    1279 	ld	a, h
      000464 F8 06                 1280 	ldhl	sp,	#6
      000466 32                    1281 	ld	(hl-), a
      000467 2A                    1282 	ld	a, (hl+)
      000468 5F                    1283 	ld	e, a
      000469 56                    1284 	ld	d, (hl)
      00046A 1A                    1285 	ld	a, (de)
      00046B F8 01                 1286 	ldhl	sp,	#1
      00046D 77                    1287 	ld	(hl), a
                           00046E  1288 	C$snake_logic.c$176$4_1$126	= .
                                   1289 	.globl	C$snake_logic.c$176$4_1$126
                                   1290 ;src/snake_logic.c:176: if (currentX == snake.x && currentY == snake.y)
      00046E FAr00r00              1291 	ld	a, (#_snake + 0)
      000471 F8 07                 1292 	ldhl	sp,	#7
      000473 77                    1293 	ld	(hl), a
      000474 F8 00                 1294 	ldhl	sp,	#0
      000476 7E                    1295 	ld	a, (hl)
      000477 F8 07                 1296 	ldhl	sp,	#7
      000479 96                    1297 	sub	a, (hl)
      00047A 20 13                 1298 	jr	NZ, 00102$
      00047C FAr01r00              1299 	ld	a, (#(_snake + 1) + 0)
      00047F F8 07                 1300 	ldhl	sp,	#7
      000481 77                    1301 	ld	(hl), a
      000482 F8 01                 1302 	ldhl	sp,	#1
      000484 7E                    1303 	ld	a, (hl)
      000485 F8 07                 1304 	ldhl	sp,	#7
      000487 96                    1305 	sub	a, (hl)
      000488 20 05                 1306 	jr	NZ, 00102$
                           00048A  1307 	C$snake_logic.c$178$5_1$127	= .
                                   1308 	.globl	C$snake_logic.c$178$5_1$127
                                   1309 ;src/snake_logic.c:178: gameover();
      00048A C5                    1310 	push	bc
      00048B CDr00r00              1311 	call	_gameover
      00048E C1                    1312 	pop	bc
      00048F                       1313 00102$:
                           00048F  1314 	C$snake_logic.c$181$4_1$126	= .
                                   1315 	.globl	C$snake_logic.c$181$4_1$126
                                   1316 ;src/snake_logic.c:181: snake.tail[i].x = prevX;
      00048F F8 08                 1317 	ldhl	sp,	#8
                           000491  1318 	C$snake_logic.c$182$4_1$126	= .
                                   1319 	.globl	C$snake_logic.c$182$4_1$126
                                   1320 ;src/snake_logic.c:182: snake.tail[i].y = prevY;
      000491 3A                    1321 	ld	a, (hl-)
      000492 2B                    1322 	dec	hl
      000493 2B                    1323 	dec	hl
      000494 02                    1324 	ld	(bc), a
      000495 2A                    1325 	ld	a, (hl+)
      000496 5F                    1326 	ld	e, a
      000497 3A                    1327 	ld	a, (hl-)
      000498 2B                    1328 	dec	hl
      000499 57                    1329 	ld	d, a
      00049A 7E                    1330 	ld	a, (hl)
      00049B 12                    1331 	ld	(de), a
                           00049C  1332 	C$snake_logic.c$184$4_2$128	= .
                                   1333 	.globl	C$snake_logic.c$184$4_2$128
                                   1334 ;src/snake_logic.c:184: UINT8 tail_sprite_prop = turnaraoundMap[snake.tail[i].x / 8][snake.tail[i].y / 8];
      00049C F8 08                 1335 	ldhl	sp,	#8
      00049E 7E                    1336 	ld	a, (hl)
      00049F F8 03                 1337 	ldhl	sp,	#3
      0004A1 22                    1338 	ld	(hl+), a
      0004A2 AF                    1339 	xor	a, a
      0004A3 32                    1340 	ld	(hl-), a
      0004A4 2A                    1341 	ld	a, (hl+)
      0004A5 4F                    1342 	ld	c, a
      0004A6 46                    1343 	ld	b, (hl)
      0004A7 CB 7E                 1344 	bit	7, (hl)
      0004A9 28 0A                 1345 	jr	Z, 00130$
      0004AB 2B                    1346 	dec	hl
      0004AC 2A                    1347 	ld	a, (hl+)
      0004AD 5F                    1348 	ld	e, a
      0004AE 56                    1349 	ld	d, (hl)
      0004AF 21 07 00              1350 	ld	hl, #0x0007
      0004B2 19                    1351 	add	hl, de
      0004B3 4D                    1352 	ld	c, l
      0004B4 44                    1353 	ld	b, h
      0004B5                       1354 00130$:
      0004B5 CB 28                 1355 	sra	b
      0004B7 CB 19                 1356 	rr	c
      0004B9 CB 28                 1357 	sra	b
      0004BB CB 19                 1358 	rr	c
      0004BD CB 28                 1359 	sra	b
      0004BF CB 19                 1360 	rr	c
      0004C1 69                    1361 	ld	l, c
      0004C2 60                    1362 	ld	h, b
      0004C3 29                    1363 	add	hl, hl
      0004C4 09                    1364 	add	hl, bc
      0004C5 29                    1365 	add	hl, hl
      0004C6 29                    1366 	add	hl, hl
      0004C7 29                    1367 	add	hl, hl
      0004C8 09                    1368 	add	hl, bc
      0004C9 01r59r00              1369 	ld	bc,#_turnaraoundMap
      0004CC 09                    1370 	add	hl,bc
      0004CD 4D                    1371 	ld	c, l
      0004CE 44                    1372 	ld	b, h
      0004CF F8 05                 1373 	ldhl	sp,#5
      0004D1 2A                    1374 	ld	a, (hl+)
      0004D2 5F                    1375 	ld	e, a
      0004D3 3A                    1376 	ld	a, (hl-)
      0004D4 2B                    1377 	dec	hl
      0004D5 57                    1378 	ld	d, a
      0004D6 1A                    1379 	ld	a, (de)
      0004D7 22                    1380 	ld	(hl+), a
      0004D8 AF                    1381 	xor	a, a
      0004D9 32                    1382 	ld	(hl-), a
      0004DA 2A                    1383 	ld	a, (hl+)
      0004DB 23                    1384 	inc	hl
      0004DC 32                    1385 	ld	(hl-), a
      0004DD 2A                    1386 	ld	a, (hl+)
      0004DE 23                    1387 	inc	hl
      0004DF 32                    1388 	ld	(hl-), a
      0004E0 2B                    1389 	dec	hl
      0004E1 CB 7E                 1390 	bit	7, (hl)
      0004E3 28 12                 1391 	jr	Z, 00131$
      0004E5 2B                    1392 	dec	hl
      0004E6 2A                    1393 	ld	a, (hl+)
      0004E7 5F                    1394 	ld	e, a
      0004E8 56                    1395 	ld	d, (hl)
      0004E9 21 07 00              1396 	ld	hl, #0x0007
      0004EC 19                    1397 	add	hl, de
      0004ED E5                    1398 	push	hl
      0004EE 7D                    1399 	ld	a, l
      0004EF F8 08                 1400 	ldhl	sp,	#8
      0004F1 77                    1401 	ld	(hl), a
      0004F2 E1                    1402 	pop	hl
      0004F3 7C                    1403 	ld	a, h
      0004F4 F8 07                 1404 	ldhl	sp,	#7
      0004F6 77                    1405 	ld	(hl), a
      0004F7                       1406 00131$:
      0004F7 F8 06                 1407 	ldhl	sp,#6
      0004F9 2A                    1408 	ld	a, (hl+)
      0004FA 5F                    1409 	ld	e, a
      0004FB 56                    1410 	ld	d, (hl)
      0004FC CB 2A                 1411 	sra	d
      0004FE CB 1B                 1412 	rr	e
      000500 CB 2A                 1413 	sra	d
      000502 CB 1B                 1414 	rr	e
      000504 CB 2A                 1415 	sra	d
      000506 CB 1B                 1416 	rr	e
      000508 6B                    1417 	ld	l, e
      000509 62                    1418 	ld	h, d
      00050A 09                    1419 	add	hl, bc
      00050B 7E                    1420 	ld	a, (hl)
      00050C F8 02                 1421 	ldhl	sp,	#2
      00050E 77                    1422 	ld	(hl), a
                           00050F  1423 	C$snake_logic.c$185$4_2$128	= .
                                   1424 	.globl	C$snake_logic.c$185$4_2$128
                                   1425 ;src/snake_logic.c:185: UINT8 spriteToUse = 2u;
      00050F F8 03                 1426 	ldhl	sp,	#3
                           000511  1427 	C$snake_logic.c$186$4_2$128	= .
                                   1428 	.globl	C$snake_logic.c$186$4_2$128
                                   1429 ;src/snake_logic.c:186: if (tail_sprite_prop != 0)
      000511 3E 02                 1430 	ld	a, #0x02
      000513 32                    1431 	ld	(hl-), a
      000514 7E                    1432 	ld	a, (hl)
      000515 B7                    1433 	or	a, a
      000516 28 05                 1434 	jr	Z, 00110$
                           000518  1435 	C$snake_logic.c$188$5_2$129	= .
                                   1436 	.globl	C$snake_logic.c$188$5_2$129
                                   1437 ;src/snake_logic.c:188: spriteToUse = 4u;
      000518 23                    1438 	inc	hl
      000519 36 04                 1439 	ld	(hl), #0x04
      00051B 18 1B                 1440 	jr	00111$
      00051D                       1441 00110$:
                           00051D  1442 	C$snake_logic.c$190$4_2$128	= .
                                   1443 	.globl	C$snake_logic.c$190$4_2$128
                                   1444 ;src/snake_logic.c:190: else if (currentX == prevX)
      00051D F8 00                 1445 	ldhl	sp,	#0
      00051F 7E                    1446 	ld	a, (hl)
      000520 F8 08                 1447 	ldhl	sp,	#8
      000522 96                    1448 	sub	a, (hl)
      000523 20 06                 1449 	jr	NZ, 00107$
                           000525  1450 	C$snake_logic.c$192$5_2$130	= .
                                   1451 	.globl	C$snake_logic.c$192$5_2$130
                                   1452 ;src/snake_logic.c:192: spriteToUse = 6u;
      000525 F8 03                 1453 	ldhl	sp,	#3
      000527 36 06                 1454 	ld	(hl), #0x06
      000529 18 0D                 1455 	jr	00111$
      00052B                       1456 00107$:
                           00052B  1457 	C$snake_logic.c$194$4_2$128	= .
                                   1458 	.globl	C$snake_logic.c$194$4_2$128
                                   1459 ;src/snake_logic.c:194: else if (currentX == 99)
      00052B F8 00                 1460 	ldhl	sp,	#0
      00052D 7E                    1461 	ld	a, (hl)
      00052E D6 63                 1462 	sub	a, #0x63
      000530 20 06                 1463 	jr	NZ, 00111$
                           000532  1464 	C$snake_logic.c$196$5_2$131	= .
                                   1465 	.globl	C$snake_logic.c$196$5_2$131
                                   1466 ;src/snake_logic.c:196: spriteToUse = snake.lastUsedTailIndex;
      000532 FAr54r00              1467 	ld	a, (#(_snake + 84) + 0)
      000535 F8 03                 1468 	ldhl	sp,	#3
      000537 77                    1469 	ld	(hl), a
      000538                       1470 00111$:
                           000538  1471 	C$snake_logic.c$199$4_2$128	= .
                                   1472 	.globl	C$snake_logic.c$199$4_2$128
                                   1473 ;src/snake_logic.c:199: if (i == snake.tailLength - 1)
      000538 FAr55r00              1474 	ld	a, (#(_snake + 85) + 0)
      00053B 06 00                 1475 	ld	b, #0x00
      00053D 4F                    1476 	ld	c, a
      00053E 0B                    1477 	dec	bc
      00053F F8 09                 1478 	ldhl	sp,	#9
      000541 7E                    1479 	ld	a, (hl)
      000542 91                    1480 	sub	a, c
      000543 20 0C                 1481 	jr	NZ, 00113$
      000545 23                    1482 	inc	hl
      000546 7E                    1483 	ld	a, (hl)
      000547 90                    1484 	sub	a, b
      000548 20 07                 1485 	jr	NZ, 00113$
                           00054A  1486 	C$snake_logic.c$201$5_2$132	= .
                                   1487 	.globl	C$snake_logic.c$201$5_2$132
                                   1488 ;src/snake_logic.c:201: snake.lastUsedTailIndex = spriteToUse;
      00054A 11r54r00              1489 	ld	de, #(_snake + 84)
      00054D F8 03                 1490 	ldhl	sp,	#3
      00054F 7E                    1491 	ld	a, (hl)
      000550 12                    1492 	ld	(de), a
      000551                       1493 00113$:
                                   1494 ;src/snake_logic.c:204: set_sprite_tile(i + 7u, spriteToUse);
      000551 F8 09                 1495 	ldhl	sp,	#9
      000553 7E                    1496 	ld	a, (hl)
      000554 C6 07                 1497 	add	a, #0x07
      000556 F8 04                 1498 	ldhl	sp,	#4
      000558 77                    1499 	ld	(hl), a
      000559 4E                    1500 	ld	c, (hl)
                                   1501 ;/opt/gbdk/include/gb/gb.h:1314: shadow_OAM[nb].tile=tile;
      00055A F8 07                 1502 	ldhl	sp,	#7
      00055C 79                    1503 	ld	a, c
      00055D 22                    1504 	ld	(hl+), a
      00055E 36 00                 1505 	ld	(hl), #0x00
      000560 3E 02                 1506 	ld	a, #0x02
      000562                       1507 00211$:
      000562 F8 07                 1508 	ldhl	sp,	#7
      000564 CB 26                 1509 	sla	(hl)
      000566 23                    1510 	inc	hl
      000567 CB 16                 1511 	rl	(hl)
      000569 3D                    1512 	dec	a
      00056A 20 F6                 1513 	jr	NZ, 00211$
      00056C 2B                    1514 	dec	hl
      00056D 2A                    1515 	ld	a, (hl+)
      00056E 5F                    1516 	ld	e, a
      00056F 56                    1517 	ld	d, (hl)
      000570 21r00r00              1518 	ld	hl, #_shadow_OAM
      000573 19                    1519 	add	hl, de
      000574 E5                    1520 	push	hl
      000575 7D                    1521 	ld	a, l
      000576 F8 07                 1522 	ldhl	sp,	#7
      000578 77                    1523 	ld	(hl), a
      000579 E1                    1524 	pop	hl
      00057A 7C                    1525 	ld	a, h
      00057B F8 06                 1526 	ldhl	sp,	#6
      00057D 32                    1527 	ld	(hl-), a
      00057E 2A                    1528 	ld	a, (hl+)
      00057F 5F                    1529 	ld	e, a
      000580 56                    1530 	ld	d, (hl)
      000581 21 02 00              1531 	ld	hl, #0x0002
      000584 19                    1532 	add	hl, de
      000585 E5                    1533 	push	hl
      000586 7D                    1534 	ld	a, l
      000587 F8 09                 1535 	ldhl	sp,	#9
      000589 77                    1536 	ld	(hl), a
      00058A E1                    1537 	pop	hl
      00058B 7C                    1538 	ld	a, h
      00058C F8 08                 1539 	ldhl	sp,	#8
      00058E 32                    1540 	ld	(hl-), a
      00058F 2A                    1541 	ld	a, (hl+)
      000590 5F                    1542 	ld	e, a
      000591 56                    1543 	ld	d, (hl)
      000592 F8 03                 1544 	ldhl	sp,	#3
                                   1545 ;src/snake_logic.c:205: set_sprite_prop(i + 7u, tail_sprite_prop);
      000594 2A                    1546 	ld	a, (hl+)
      000595 12                    1547 	ld	(de), a
      000596 4E                    1548 	ld	c, (hl)
                                   1549 ;/opt/gbdk/include/gb/gb.h:1360: shadow_OAM[nb].prop=prop;
      000597 F8 07                 1550 	ldhl	sp,	#7
      000599 79                    1551 	ld	a, c
      00059A 22                    1552 	ld	(hl+), a
      00059B 36 00                 1553 	ld	(hl), #0x00
      00059D 3E 02                 1554 	ld	a, #0x02
      00059F                       1555 00212$:
      00059F F8 07                 1556 	ldhl	sp,	#7
      0005A1 CB 26                 1557 	sla	(hl)
      0005A3 23                    1558 	inc	hl
      0005A4 CB 16                 1559 	rl	(hl)
      0005A6 3D                    1560 	dec	a
      0005A7 20 F6                 1561 	jr	NZ, 00212$
      0005A9 2B                    1562 	dec	hl
      0005AA 2A                    1563 	ld	a, (hl+)
      0005AB 5F                    1564 	ld	e, a
      0005AC 56                    1565 	ld	d, (hl)
      0005AD 21r00r00              1566 	ld	hl, #_shadow_OAM
      0005B0 19                    1567 	add	hl, de
      0005B1 E5                    1568 	push	hl
      0005B2 7D                    1569 	ld	a, l
      0005B3 F8 07                 1570 	ldhl	sp,	#7
      0005B5 77                    1571 	ld	(hl), a
      0005B6 E1                    1572 	pop	hl
      0005B7 7C                    1573 	ld	a, h
      0005B8 F8 06                 1574 	ldhl	sp,	#6
      0005BA 32                    1575 	ld	(hl-), a
      0005BB 2A                    1576 	ld	a, (hl+)
      0005BC 5F                    1577 	ld	e, a
      0005BD 56                    1578 	ld	d, (hl)
      0005BE 21 03 00              1579 	ld	hl, #0x0003
      0005C1 19                    1580 	add	hl, de
      0005C2 E5                    1581 	push	hl
      0005C3 7D                    1582 	ld	a, l
      0005C4 F8 09                 1583 	ldhl	sp,	#9
      0005C6 77                    1584 	ld	(hl), a
      0005C7 E1                    1585 	pop	hl
      0005C8 7C                    1586 	ld	a, h
      0005C9 F8 08                 1587 	ldhl	sp,	#8
      0005CB 32                    1588 	ld	(hl-), a
      0005CC 2A                    1589 	ld	a, (hl+)
      0005CD 5F                    1590 	ld	e, a
      0005CE 56                    1591 	ld	d, (hl)
      0005CF F8 02                 1592 	ldhl	sp,	#2
      0005D1 7E                    1593 	ld	a, (hl)
      0005D2 12                    1594 	ld	(de), a
                                   1595 ;src/snake_logic.c:206: move_sprite(i + 7u, snake.tail[i].x, snake.tail[i].y);
      0005D3 F8 09                 1596 	ldhl	sp,	#9
      0005D5 2A                    1597 	ld	a, (hl+)
      0005D6 4E                    1598 	ld	c, (hl)
      0005D7 87                    1599 	add	a, a
      0005D8 CB 11                 1600 	rl	c
      0005DA C6r04                 1601 	add	a, #<((_snake + 4))
      0005DC 5F                    1602 	ld	e, a
      0005DD 79                    1603 	ld	a, c
      0005DE CEs00                 1604 	adc	a, #>((_snake + 4))
      0005E0 57                    1605 	ld	d, a
      0005E1 4B                    1606 	ld	c, e
      0005E2 42                    1607 	ld	b, d
      0005E3 03                    1608 	inc	bc
      0005E4 0A                    1609 	ld	a, (bc)
      0005E5 F8 07                 1610 	ldhl	sp,	#7
      0005E7 22                    1611 	ld	(hl+), a
      0005E8 1A                    1612 	ld	a, (de)
      0005E9 77                    1613 	ld	(hl), a
      0005EA F8 04                 1614 	ldhl	sp,	#4
                                   1615 ;/opt/gbdk/include/gb/gb.h:1387: OAM_item_t * itm = &shadow_OAM[nb];
      0005EC 2A                    1616 	ld	a, (hl+)
      0005ED 22                    1617 	ld	(hl+), a
      0005EE AF                    1618 	xor	a, a
      0005EF 32                    1619 	ld	(hl-), a
      0005F0 3A                    1620 	ld	a, (hl-)
      0005F1 2B                    1621 	dec	hl
      0005F2 77                    1622 	ld	(hl), a
      0005F3 F8 06                 1623 	ldhl	sp,	#6
      0005F5 3A                    1624 	ld	a, (hl-)
      0005F6 2B                    1625 	dec	hl
      0005F7 77                    1626 	ld	(hl), a
      0005F8 3E 02                 1627 	ld	a, #0x02
      0005FA                       1628 00214$:
      0005FA F8 03                 1629 	ldhl	sp,	#3
      0005FC CB 26                 1630 	sla	(hl)
      0005FE 23                    1631 	inc	hl
      0005FF CB 16                 1632 	rl	(hl)
      000601 3D                    1633 	dec	a
      000602 20 F6                 1634 	jr	NZ, 00214$
      000604 2B                    1635 	dec	hl
      000605 2A                    1636 	ld	a, (hl+)
      000606 5F                    1637 	ld	e, a
      000607 56                    1638 	ld	d, (hl)
      000608 21r00r00              1639 	ld	hl, #_shadow_OAM
      00060B 19                    1640 	add	hl, de
      00060C E5                    1641 	push	hl
      00060D 7D                    1642 	ld	a, l
      00060E F8 07                 1643 	ldhl	sp,	#7
      000610 77                    1644 	ld	(hl), a
      000611 E1                    1645 	pop	hl
      000612 7C                    1646 	ld	a, h
      000613 F8 06                 1647 	ldhl	sp,	#6
                                   1648 ;/opt/gbdk/include/gb/gb.h:1388: itm->y=y, itm->x=x;
      000615 32                    1649 	ld	(hl-), a
      000616 2A                    1650 	ld	a, (hl+)
      000617 5F                    1651 	ld	e, a
      000618 2A                    1652 	ld	a, (hl+)
      000619 57                    1653 	ld	d, a
      00061A 3A                    1654 	ld	a, (hl-)
      00061B 2B                    1655 	dec	hl
      00061C 12                    1656 	ld	(de), a
      00061D 2A                    1657 	ld	a, (hl+)
      00061E 5F                    1658 	ld	e, a
      00061F 56                    1659 	ld	d, (hl)
      000620 6B                    1660 	ld	l, e
      000621 62                    1661 	ld	h, d
      000622 23                    1662 	inc	hl
      000623 E5                    1663 	push	hl
      000624 7D                    1664 	ld	a, l
      000625 F8 05                 1665 	ldhl	sp,	#5
      000627 77                    1666 	ld	(hl), a
      000628 E1                    1667 	pop	hl
      000629 7C                    1668 	ld	a, h
      00062A F8 04                 1669 	ldhl	sp,	#4
      00062C 32                    1670 	ld	(hl-), a
      00062D 2A                    1671 	ld	a, (hl+)
      00062E 5F                    1672 	ld	e, a
      00062F 56                    1673 	ld	d, (hl)
      000630 F8 08                 1674 	ldhl	sp,	#8
      000632 7E                    1675 	ld	a, (hl)
      000633 12                    1676 	ld	(de), a
                           000634  1677 	C$snake_logic.c$208$4_2$128	= .
                                   1678 	.globl	C$snake_logic.c$208$4_2$128
                                   1679 ;src/snake_logic.c:208: prevX = currentX;
      000634 F8 00                 1680 	ldhl	sp,	#0
      000636 7E                    1681 	ld	a, (hl)
      000637 F8 08                 1682 	ldhl	sp,	#8
      000639 77                    1683 	ld	(hl), a
                           00063A  1684 	C$snake_logic.c$209$4_2$128	= .
                                   1685 	.globl	C$snake_logic.c$209$4_2$128
                                   1686 ;src/snake_logic.c:209: prevY = currentY;
      00063A F8 01                 1687 	ldhl	sp,	#1
      00063C 7E                    1688 	ld	a, (hl)
      00063D F8 04                 1689 	ldhl	sp,	#4
      00063F 77                    1690 	ld	(hl), a
                           000640  1691 	C$snake_logic.c$171$3_1$125	= .
                                   1692 	.globl	C$snake_logic.c$171$3_1$125
                                   1693 ;src/snake_logic.c:171: for (int i = 0; i < snake.tailLength; i++)
      000640 F8 09                 1694 	ldhl	sp,	#9
      000642 34                    1695 	inc	(hl)
      000643 C2r27r04              1696 	jp	NZ,00124$
      000646 23                    1697 	inc	hl
      000647 34                    1698 	inc	(hl)
      000648 C3r27r04              1699 	jp	00124$
      00064B                       1700 00126$:
                           00064B  1701 	C$snake_logic.c$212$1_0$122	= .
                                   1702 	.globl	C$snake_logic.c$212$1_0$122
                                   1703 ;src/snake_logic.c:212: }
      00064B E8 0B                 1704 	add	sp, #11
                           00064D  1705 	C$snake_logic.c$212$1_0$122	= .
                                   1706 	.globl	C$snake_logic.c$212$1_0$122
                           00064D  1707 	XG$move_snake$0$0	= .
                                   1708 	.globl	XG$move_snake$0$0
      00064D C9                    1709 	ret
                                   1710 	.area _CODE
                                   1711 	.area _INITIALIZER
                           000000  1712 Fsnake_logic$__xinit_lastTime$0_0$0 == .
      000000                       1713 __xinit__lastTime:
      000000 00 00                 1714 	.dw #0x0000
                           000002  1715 Fsnake_logic$__xinit_timeCounter$0_0$0 == .
      000002                       1716 __xinit__timeCounter:
      000002 00 00                 1717 	.dw #0x0000
                                   1718 	.area _CABS (ABS)
